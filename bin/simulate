#!/usr/bin/env node

const Queue = require('bull')
const { getClient } = require('../lib/redis')

main()

async function main () {
  const redisOptions = { host: process.env.REDIS_HOST || '0.0.0.0', port: process.env.REDIS_PORT ? +process.env.REDIS_PORT : 6379, db: process.env.REDIS_DB || '0' }
  console.log({ redisOptions })
  const redis = getClient(redisOptions)
  const [queue1, queue2, queue3] = ['queue1', 'queue2', 'queue3'].map(name => new Queue(name, { redis }))

  const fakeWork = async () => new Promise((resolve) => setTimeout(resolve, +(Math.random() * 1000)))

  queue1.process(2, fakeWork)
  queue2.process(2, fakeWork)
  queue3.process(2, fakeWork)

  setInterval(async () => {
    queue1.add({ foo: 'bar' }, { attempts: 2 })
    queue2.add({ foo: 'bar' }, { attempts: 2 })
    queue3.add({ foo: 'bar' }, { attempts: 2 })
  }, 1000)
}
